<!--suppress NonOsgiMavenDependency -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <sureFireOptions9 />
      <sureFireForks9>false</sureFireForks9>
      <surefireArgLine />
      <skip.unit.tests>false</skip.unit.tests>
      <artifact.classifier />

      <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
      <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>

      <kotlin.version>1.1.51</kotlin.version>
      <maven.release.version>2.5.3</maven.release.version>
      <slf4j.version>1.7.25</slf4j.version>
      <log4j.version>2.9.0</log4j.version>
      <junit.version>4.12</junit.version>
   </properties>

   <groupId>com.zaxxer</groupId>
   <artifactId>jnb-ping</artifactId>
   <version>0.9.0-SNAPSHOT</version>
   <packaging>bundle</packaging>

   <name>jnb-ping</name>
   <description>Java Non-Blocking Ping (ICMP)</description>
   <url>https://github.com/brettwooldridge/jnb-ping</url>

   <organization>
      <name>Zaxxer.com</name>
      <url>https://github.com/brettwooldridge</url>
   </organization>

   <scm>
      <connection>scm:git:git@github.com:brettwooldridge/jnb-ping.git</connection>
      <developerConnection>scm:git:git@github.com:brettwooldridge/jnb-ping.git</developerConnection>
      <url>git@github.com:brettwooldridge/jnb-ping.git</url>
      <tag>HEAD</tag>
   </scm>

   <licenses>
      <license>
         <name>The Apache Software License, Version 2.0</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>

   <developers>
      <developer>
         <name>Brett Wooldridge</name>
         <email>brett.wooldridge@gmail.com</email>
      </developer>
   </developers>

   <parent>
      <groupId>org.sonatype.oss</groupId>
      <artifactId>oss-parent</artifactId>
      <version>9</version>
   </parent>

   <prerequisites>
      <maven>3.3.9</maven>
   </prerequisites>

   <repositories>
      <repository>
         <id>oss-sonatype</id>
         <name>oss-sonatype</name>
         <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
         <snapshots>
            <enabled>true</enabled>
         </snapshots>
      </repository>
   </repositories>

   <dependencies>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
      </dependency>

      <dependency>
         <groupId>net.java.dev.jna</groupId>
         <artifactId>jna</artifactId>
         <version>4.5.0</version>
      </dependency>

      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-stdlib-jre8</artifactId>
         <version>${kotlin.version}</version>
      </dependency>

      <dependency>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-gpg-plugin</artifactId>
         <version>1.6</version>
         <type>maven-plugin</type>
      </dependency>

      <!-- Test -->
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-api</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>${junit.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jetbrains.kotlin</groupId>
         <artifactId>kotlin-test-junit</artifactId>
         <version>${kotlin.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <sourceDirectory>src/main/kotlin</sourceDirectory>
      <testSourceDirectory>src/test/kotlin</testSourceDirectory>

      <plugins>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.9</version>
            <executions>
               <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed. -->
               <execution>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                     <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                     <propertyName>surefireArgLine</propertyName>
                  </configuration>
               </execution>
               <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
               <execution>
                  <id>report</id>
                  <phase>test</phase>
                  <goals>
                     <goal>report</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
            <executions>
               <execution>
                  <id>compile</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>test-compile</id>
                  <phase>test-compile</phase>
                  <goals>
                     <goal>test-compile</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <jvmTarget>1.8</jvmTarget>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
               <execution>
                  <id>default-compile</id>
                  <phase>none</phase>
               </execution>
               <execution>
                  <id>default-testCompile</id>
                  <phase>none</phase>
               </execution>
               <execution>
                  <id>compile</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>compile</goal>
                  </goals>
               </execution>
               <execution>
                  <id>testCompile</id>
                  <phase>test-compile</phase>
                  <goals>
                     <goal>testCompile</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>

      <pluginManagement>
         <plugins>
            <plugin>
               <artifactId>kotlin-maven-plugin</artifactId>
               <groupId>org.jetbrains.kotlin</groupId>
               <version>${kotlin.version}</version>

               <executions>
                  <execution>
                     <id>compile</id>
                     <goals> <goal>compile</goal> </goals>
                  </execution>

                  <execution>
                     <id>test-compile</id>
                     <goals> <goal>test-compile</goal> </goals>
                  </execution>
               </executions>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-jar-plugin</artifactId>
               <version>2.6</version>
               <configuration>
                  <archive>
                     <manifest>
                        <addClasspath>true</addClasspath>
                     </manifest>
                  </archive>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <version>${maven.release.version}</version>
               <configuration>
                  <autoVersionSubmodules>true</autoVersionSubmodules>
                  <tagNameFormat>jnb-ping-@{project.version}</tagNameFormat>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>2.20</version>
               <configuration>
                  <!-- Sets the VM argument line used when unit tests are run. -->
                  <argLine>${surefireArgLine} ${sureFireOptions9}</argLine>
                  <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                  <skipTests>${skip.unit.tests}</skipTests>
                  <reuseForks>${sureFireForks9}</reuseForks>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>3.0.1</version>
               <configuration>
                  <!-- outputDirectory>/absolute/path/to/the/output/directory</outputDirectory>
                     <finalName>filename-of-generated-jar-file</finalName -->
                  <attach>true</attach>
               </configuration>
               <executions>
                  <execution>
                     <id>attach-sources</id>
                     <goals>
                        <goal>jar</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>2.10.4</version>
               <configuration>
                  <show>public</show>
                  <excludePackageNames>com.zaxxer.ping.impl</excludePackageNames>
                  <attach>true</attach>
                  <maxmemory>1024m</maxmemory>
               </configuration>
               <executions>
                  <execution>
                     <id>bundle-sources</id>
                     <phase>package</phase>
                     <goals>
                        <goal>jar</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>Java9</id>
         <activation>
            <jdk>[9,)</jdk>
         </activation>
         <properties>
            <!-- sureFireOptions9>
               -add-opens java.base/java.net=ALL-UNNAMED
               -add-opens java.base/java.security=ALL-UNNAMED
               -add-exports java.base/sun.net.www.protocol.http=ALL-UNNAMED
               -add-exports java.base/sun.net.www.protocol.https=ALL-UNNAMED
            </sureFireOptions9 -->
            <sureFireForks9>true</sureFireForks9>
            <artifact.classifier>java9</artifact.classifier>
         </properties>
      </profile>

      <profile>
         <id>release-sign-artifacts</id>
         <activation>
            <property>
               <name>performRelease</name>
               <value>true</value>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-gpg-plugin</artifactId>
                  <version>1.6</version>
                  <executions>
                     <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                           <goal>sign</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
